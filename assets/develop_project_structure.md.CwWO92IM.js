import{_ as s,C as o,c as _,o as l,a2 as r,b as E,G as e,w as t,a as d,a7 as c}from"./chunks/framework.CPU0zDjs.js";const b=JSON.parse('{"title":"项目结构与实现","description":"面向开发者的部分，了解LingChat的项目结构和实现细节，包括主程序入口各个模块的组织方式。","frontmatter":{"title":"项目结构与实现","description":"面向开发者的部分，了解LingChat的项目结构和实现细节，包括主程序入口各个模块的组织方式。"},"headers":[],"relativePath":"develop/project_structure.md","filePath":"develop/project_structure.md","lastUpdated":1758397661000}'),B={name:"develop/project_structure.md"};function C(h,a,u,m,p,D){const i=o("Mermaid"),n=o("NolebaseGitContributors"),A=o("NolebaseGitChangelog");return l(),_("div",null,[a[2]||(a[2]=r('<h1 id="项目结构与实现" tabindex="-1">项目结构与实现 <a class="header-anchor" href="#项目结构与实现" aria-label="Permalink to &quot;项目结构与实现&quot;">​</a></h1><h2 id="程序入口" tabindex="-1">程序入口 <a class="header-anchor" href="#程序入口" aria-label="Permalink to &quot;程序入口&quot;">​</a></h2><h3 id="主程序" tabindex="-1">主程序 <a class="header-anchor" href="#主程序" aria-label="Permalink to &quot;主程序&quot;">​</a></h3><ul><li><code>ling_chat/main.py</code> 是主程序入口，负责启动后端服务（监听 env 文件里面指定配置的端口）</li><li>你也可以直接在浏览器访问 <code>localhost:8765</code>，体验完整功能。</li><li>使用根目录下的 <code>start.bat</code>，会自动激活 <code>venv</code> 虚拟环境并启动主程序。</li><li>项目配置集中在 <code>.env</code> 文件，访问网页的 <strong>高级设置</strong> 可自动读取并生成可视化配置界面</li></ul><h2 id="程序结构" tabindex="-1">程序结构 <a class="header-anchor" href="#程序结构" aria-label="Permalink to &quot;程序结构&quot;">​</a></h2>',5)),(l(),E(c,null,{default:t(()=>[e(i,{id:"mermaid-34",class:"mermaid",graph:"graph%20TD%0A%20%20%20%20A%5B%E6%A0%B9%E7%9B%AE%E5%BD%95%5D%20--%3E%7C%E5%8C%85%E5%90%AB%7C%20B%5Bling_chat%5D%0A%20%20%20%20B%20--%3E%7C%E8%BF%90%E8%A1%8C%E5%9C%A88765%E7%AB%AF%E5%8F%A3%7C%20E%5B%E5%90%8E%E7%AB%AF%E7%A8%8B%E5%BA%8F%5D%0A%20%20%20%20A%20--%3E%7C%E5%8C%85%E5%90%AB%7C%20C%5Bfrontend_v3%5D%0A%20%20%20%20A%20--%3E%7C%E5%8C%85%E5%90%AB%7C%20D%5Bling_chat%2Fdata%EF%BC%88%E9%BB%98%E8%AE%A4%EF%BC%89%5D%0A%20%20%20%20C%20--%3E%7C%E5%8C%85%E5%90%AB%7C%20F%5B%E5%89%8D%E7%AB%AF%E6%96%87%E4%BB%B6%EF%BC%88vue%E7%89%88%E6%9C%AC%EF%BC%89%5D%0A%20%20%20%20D%20--%3E%7C%E5%AD%98%E5%82%A8%7C%20G%5B%E6%97%A5%E5%BF%97%E5%92%8C%E7%BC%93%E5%AD%98%E6%95%B0%E6%8D%AE%5D%0A"})]),fallback:t(()=>a[0]||(a[0]=[d(" Loading... ")])),_:1})),a[3]||(a[3]=r('<ul><li><code>ling_chat</code> 目录包含基于 Python 的后端服务，负责监听指定端口。</li><li><code>ling_chat/static</code> 目录存放前端资源，包括 静态资源、vue前端代码 等文件。</li><li><code>ling_chat/data</code> 默认情况下用于存储日志、对话记录及缓存数据。此目录内容可安全删除，但如需备份聊天记录请提前保存。</li></ul><h2 id="其他相关" tabindex="-1">其他相关 <a class="header-anchor" href="#其他相关" aria-label="Permalink to &quot;其他相关&quot;">​</a></h2><h3 id="torch-与神经网络库依赖" tabindex="-1">torch 与神经网络库依赖 <a class="header-anchor" href="#torch-与神经网络库依赖" aria-label="Permalink to &quot;torch 与神经网络库依赖&quot;">​</a></h3>',3)),(l(),E(c,null,{default:t(()=>[e(i,{id:"mermaid-58",class:"mermaid",graph:"graph%20LR%0A%20%20%20%20K%5Btorch%20%E5%BA%93%5D%20--%3E%7C%E6%94%AF%E6%8C%81%7C%20L%5BAI%20%E6%83%85%E7%BB%AA%E8%AF%86%E5%88%AB%5D%0A%20%20%20%20L%20--%3E%7C%E5%88%87%E6%8D%A2%7C%20M%5B%E7%AB%8B%E7%BB%98%5D%0A%20%20%20%20K%20--%3E%7C%E6%94%AF%E6%8C%81%7C%20N%5BRAG%20%E5%90%91%E9%87%8F%E5%BA%93%5D%0A%20%20%20%20N%20--%3E%7C%E5%AD%98%E5%82%A8%7C%20O%5B%E5%AF%B9%E8%AF%9D%E5%8E%86%E5%8F%B2%5D%0A%20%20%20%20N%20--%3E%7C%E7%BC%93%E5%AD%98%7C%20P%5B%E8%AF%AD%E4%B9%89%E5%90%91%E9%87%8F%E5%8C%96%E6%95%B0%E6%8D%AE%5D%0A"})]),fallback:t(()=>a[1]||(a[1]=[d(" Loading... ")])),_:1})),a[4]||(a[4]=r("<ul><li>项目采用自训练模型，通过 torch 库识别 AI 当前情绪，实现立绘自动切换。</li><li>集成 RAG 向量库，实现永久记忆系统： <ul><li>启用 RAG 后，对话内容以 JSON 格式存储于 <code>ling_chat/data/rag_chat_history/</code>。</li><li>语义向量化结果缓存在 <code>ling_chat/data/chroma_db_store/</code>。注意：缓存不支持自动删除，如需手动修改或清理 <code>rag_chat_history/</code>，请同时删除整个 <code>chroma_db_store/</code> 文件夹以保证记忆库同步。</li></ul></li><li>计算资源需求较低，仅需 torch-cpu，普通 4 代 i3 以上电脑即可流畅运行</li></ul>",1)),e(n),e(A)])}const F=s(B,[["render",C]]);export{b as __pageData,F as default};
