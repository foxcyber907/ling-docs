import{_ as l,C as s,c as n,o,a2 as h,G as i}from"./chunks/framework.CPU0zDjs.js";const v=JSON.parse('{"title":"开发版 Windows 环境配置与使用指南","description":"详细指导如何在Windows环境下配置LingChat开发环境，包括Git、Python安装和源代码获取步骤。","frontmatter":{"title":"开发版 Windows 环境配置与使用指南","description":"详细指导如何在Windows环境下配置LingChat开发环境，包括Git、Python安装和源代码获取步骤。","outline":{"level":[2,3]}},"headers":[],"relativePath":"develop/windows_dev.md","filePath":"develop/windows_dev.md","lastUpdated":1759593312000}'),p={name:"develop/windows_dev.md"};function d(r,a,c,g,k,u){const e=s("NolebaseGitContributors"),t=s("NolebaseGitChangelog");return o(),n("div",null,[a[0]||(a[0]=h(`<h1 id="lingchat-开发版-windows-环境配置与使用指南" tabindex="-1">LingChat 开发版 Windows 环境配置与使用指南 <a class="header-anchor" href="#lingchat-开发版-windows-环境配置与使用指南" aria-label="Permalink to &quot;LingChat 开发版 Windows 环境配置与使用指南&quot;">​</a></h1><div class="important custom-block github-alert"><p class="custom-block-title">文档已经过久没有更新，请慎重跟随文档进行操作</p><p></p></div><p>LingChat 几乎每天都在更新，但是很长时间才会发布一个 release 版本。</p><p>如果你想抢先使用新功能，或者想为 LingChat 项目做贡献，但自己不会写代码，我们也欢迎你体验最新的开发版并及时汇报 Bug。</p><p>本篇文档将手把手教你如何在 Windows 电脑上，从零开始配置环境，运行 LingChat 最新的开发版代码。即使你完全不懂编程。</p><p>欢迎你，勇于探索的测试者！</p><p><img src="https://github.com/user-attachments/assets/2815cca5-e037-477e-8d18-c1eb385c5deb" alt="c5845cf9148b2620b2740c40d73cc8ab"></p><hr><h2 id="一、准备工作-安装必备工具" tabindex="-1">一、准备工作：安装必备工具 <a class="header-anchor" href="#一、准备工作-安装必备工具" aria-label="Permalink to &quot;一、准备工作：安装必备工具&quot;">​</a></h2><p>在开始之前，我们需要在你的电脑上安装一些免费的开发工具。</p><h3 id="_1-安装-git" tabindex="-1">1. 安装 Git <a class="header-anchor" href="#_1-安装-git" aria-label="Permalink to &quot;1. 安装 Git&quot;">​</a></h3><p>Git 是一个代码版本管理工具，用来从 GitHub 上下载和更新 LingChat 的源代码。</p><ul><li><strong>下载地址</strong>：<a href="https://git-scm.com/download/win" target="_blank" rel="noreferrer">https://git-scm.com/download/win</a></li><li><strong>安装方法</strong>：下载后双击安装，一路点击 &quot;Next&quot; 使用默认设置即可。</li></ul><h3 id="_2-安装-git-lfs" tabindex="-1">2. 安装 Git LFS <a class="header-anchor" href="#_2-安装-git-lfs" aria-label="Permalink to &quot;2. 安装 Git LFS&quot;">​</a></h3><p>Git LFS 是 Git 的扩展，用于管理大型文件。</p><ul><li><strong>下载地址</strong>：<a href="https://git-lfs.com/" target="_blank" rel="noreferrer">https://git-lfs.com/</a></li><li><strong>安装方法</strong>：安装完成后，在命令行执行：<div class="language-powershell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">powershell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">git lfs install</span></span></code></pre></div></li></ul><h3 id="_3-安装-python" tabindex="-1">3. 安装 Python <a class="header-anchor" href="#_3-安装-python" aria-label="Permalink to &quot;3. 安装 Python&quot;">​</a></h3><p>LingChat 使用 Python 开发。</p><ul><li><p><strong>下载地址</strong>：<a href="https://www.python.org/downloads/" target="_blank" rel="noreferrer">https://www.python.org/downloads/</a></p></li><li><p><strong>推荐版本</strong>：3.12</p></li><li><p><strong>安装方法</strong>：</p><ol><li>下载后双击运行安装包。</li><li><strong>务必勾选 &quot;Add Python to PATH&quot;</strong>，再点击 &quot;Install Now&quot;。</li></ol></li></ul><h3 id="_4-安装环境管理工具-任选其一" tabindex="-1">4. 安装环境管理工具（任选其一） <a class="header-anchor" href="#_4-安装环境管理工具-任选其一" aria-label="Permalink to &quot;4. 安装环境管理工具（任选其一）&quot;">​</a></h3><h4 id="_4a-使用-conda-anaconda-或-miniconda" tabindex="-1">4A. 使用 Conda（Anaconda 或 Miniconda） <a class="header-anchor" href="#_4a-使用-conda-anaconda-或-miniconda" aria-label="Permalink to &quot;4A. 使用 Conda（Anaconda 或 Miniconda）&quot;">​</a></h4><ul><li>下载 Windows 版 Anaconda/Miniconda 安装程序（推荐 64-bit）。</li><li>双击运行安装包，接受默认选项。</li><li>安装完成后使用 <strong>Anaconda Prompt</strong> 或 <strong>PowerShell</strong> 继续操作。</li></ul><h4 id="_4b-使用-uv-推荐" tabindex="-1">4B. 使用 uv（推荐） <a class="header-anchor" href="#_4b-使用-uv-推荐" aria-label="Permalink to &quot;4B. 使用 uv（推荐）&quot;">​</a></h4><p>uv 是 Ruff 团队开发的超快 Python 包管理器。</p><ul><li><p>打开 PowerShell，执行：</p><div class="language-powershell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">powershell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">powershell </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ExecutionPolicy ByPass </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">c </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;irm https://astral.sh/uv/install.ps1 | iex&quot;</span></span></code></pre></div></li></ul><h3 id="_5-安装-vs-code-可选" tabindex="-1">5. 安装 VS Code（可选） <a class="header-anchor" href="#_5-安装-vs-code-可选" aria-label="Permalink to &quot;5. 安装 VS Code（可选）&quot;">​</a></h3><div class="note custom-block github-alert"><p class="custom-block-title">NOTE</p><p>如果只是体验 LingChat，可以不安装 VS Code。</p></div><ul><li><strong>下载地址</strong>：<a href="https://code.visualstudio.com/" target="_blank" rel="noreferrer">https://code.visualstudio.com/</a></li><li><strong>安装方法</strong>：使用默认设置安装。</li><li><strong>插件</strong>：安装后，在扩展市场搜索并安装 <strong>Python</strong> 和 <strong>Pylance</strong> 插件。</li></ul><hr><h2 id="二、获取最新源代码" tabindex="-1">二、获取最新源代码 <a class="header-anchor" href="#二、获取最新源代码" aria-label="Permalink to &quot;二、获取最新源代码&quot;">​</a></h2><h3 id="_1-创建文件夹" tabindex="-1">1. 创建文件夹 <a class="header-anchor" href="#_1-创建文件夹" aria-label="Permalink to &quot;1. 创建文件夹&quot;">​</a></h3><p>在 D 盘等位置新建文件夹，例如 <code>MyProjects</code>。</p><h3 id="_2-打开命令行" tabindex="-1">2. 打开命令行 <a class="header-anchor" href="#_2-打开命令行" aria-label="Permalink to &quot;2. 打开命令行&quot;">​</a></h3><p>进入该文件夹，在地址栏输入 <code>cmd</code> 或 <code>powershell</code> 并回车。</p><h3 id="_3-克隆仓库" tabindex="-1">3. 克隆仓库 <a class="header-anchor" href="#_3-克隆仓库" aria-label="Permalink to &quot;3. 克隆仓库&quot;">​</a></h3><ul><li><p><strong>如果只是测试开发版</strong>（推荐）：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> clone</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -b</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> develop</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://github.com/SlimeBoyOwO/LingChat.git</span></span></code></pre></div></li><li><p><strong>如果要贡献代码</strong>（需要提交 PR）：</p><p>先在 GitHub fork 仓库，然后执行：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> clone</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -b</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> develop</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://github.com/your_name/LingChat.git</span></span></code></pre></div></li></ul><p>完成后，<code>MyProjects</code> 下会出现 <code>LingChat</code> 文件夹。</p><hr><h2 id="三、配置并运行-lingchat" tabindex="-1">三、配置并运行 LingChat <a class="header-anchor" href="#三、配置并运行-lingchat" aria-label="Permalink to &quot;三、配置并运行 LingChat&quot;">​</a></h2><h3 id="_1-创建虚拟环境" tabindex="-1">1. 创建虚拟环境 <a class="header-anchor" href="#_1-创建虚拟环境" aria-label="Permalink to &quot;1. 创建虚拟环境&quot;">​</a></h3><p>进入项目目录：</p><div class="language-powershell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">powershell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">cd LingChat</span></span></code></pre></div><p>创建并激活虚拟环境（任选其一）：</p><ul><li><p>使用 <strong>uv</strong>：</p><div class="language-powershell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">powershell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">uv venv venv</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.\\venv\\Scripts\\activate</span></span></code></pre></div></li><li><p>使用 <strong>Python 自带 venv</strong>：</p><div class="language-powershell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">powershell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">python </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">m venv venv</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.\\venv\\Scripts\\activate</span></span></code></pre></div></li><li><p>使用 <strong>Conda</strong>：</p><div class="language-powershell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">powershell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">conda env create </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-f</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> environment.yaml</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">conda activate lingchat</span></span></code></pre></div></li></ul><h3 id="_2-安装依赖" tabindex="-1">2. 安装依赖 <a class="header-anchor" href="#_2-安装依赖" aria-label="Permalink to &quot;2. 安装依赖&quot;">​</a></h3><p>在虚拟环境中执行：</p><ul><li><p>如果使用 <strong>uv</strong>：</p><div class="language-powershell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">powershell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">uv pip install .</span></span></code></pre></div></li><li><p>如果使用 <strong>pip</strong>：</p><div class="language-powershell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">powershell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">python </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">m pip install .</span></span></code></pre></div></li></ul><h3 id="_3-配置环境变量" tabindex="-1">3. 配置环境变量 <a class="header-anchor" href="#_3-配置环境变量" aria-label="Permalink to &quot;3. 配置环境变量&quot;">​</a></h3><p>复制 <code>.env.example</code> 为 <code>.env</code>：</p><div class="language-powershell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">powershell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">copy .env.example .env</span></span></code></pre></div><h3 id="_4-启动-lingchat" tabindex="-1">4. 启动 LingChat <a class="header-anchor" href="#_4-启动-lingchat" aria-label="Permalink to &quot;4. 启动 LingChat&quot;">​</a></h3><p>在项目根目录执行：</p><div class="language-powershell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">powershell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">python main.py</span></span></code></pre></div><hr><h2 id="四、获取最新更新" tabindex="-1">四、获取最新更新 <a class="header-anchor" href="#四、获取最新更新" aria-label="Permalink to &quot;四、获取最新更新&quot;">​</a></h2><p>LingChat 几乎每天都更新。</p><p>进入 <code>LingChat</code> 目录，执行：</p><div class="language-powershell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">powershell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">git fetch origin</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">git reset </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">--</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">hard origin</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">develop</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">git pull</span></span></code></pre></div><p>如果 <code>pyproject.toml</code> 或依赖有变化，请重新执行：</p><div class="language-powershell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">powershell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">uv pip install .</span></span></code></pre></div><hr><h2 id="五、常见问题-faq" tabindex="-1">五、常见问题 (FAQ) <a class="header-anchor" href="#五、常见问题-faq" aria-label="Permalink to &quot;五、常见问题 (FAQ)&quot;">​</a></h2><ul><li><p><strong>Q: 输入 <code>git</code>、<code>python</code> 或 <code>uv</code> 提示“不是内部或外部命令”？</strong> A: 工具未正确安装，或未勾选 “Add to PATH”。请重新安装，并确认你在 <strong>CMD/PowerShell</strong> 内运行。</p></li><li><p><strong>Q: 运行 <code>python main.py</code> 报错 <code>ModuleNotFoundError: No module named &#39;xxx&#39;</code>？</strong> A:</p><ol><li><p>确认已激活虚拟环境（命令行前应有 <code>(venv)</code> 或 <code>(lingchat)</code>）。</p></li><li><p>确认依赖已安装，执行：</p><div class="language-powershell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">powershell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">uv pip install .</span></span></code></pre></div></li></ol></li><li><p><strong>Q: <code>git pull</code> 时出现冲突 (conflict) 怎么办？</strong> A: 作为测试者，请放弃本地改动，保持和远程一致：</p><div class="language-powershell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">powershell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">git fetch origin</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">git reset </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">--</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">hard origin</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">develop</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">git pull</span></span></code></pre></div></li></ul><blockquote><p>[!TIP] 聊天记录和设置通常不会丢失，但建议定期备份。</p></blockquote><hr><p>感谢你为 LingChat 社区做出的贡献！ 如果发现 Bug 或有建议，欢迎提交 <a href="https://github.com/SlimeBoyOwO/LingChat/issues" target="_blank" rel="noreferrer">Issue</a>。</p>`,66)),i(e),i(t)])}const E=l(p,[["render",d]]);export{v as __pageData,E as default};
