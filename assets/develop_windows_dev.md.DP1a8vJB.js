import{_ as i,c as s,o as e,a3 as a}from"./chunks/framework.HwITzfHN.js";const g=JSON.parse('{"title":"LingChat 开发版 Windows 环境配置与使用指南","description":"","frontmatter":{"outline":{"level":[2,3]}},"headers":[],"relativePath":"develop/windows_dev.md","filePath":"develop/windows_dev.md","lastUpdated":1753491811000}'),o={name:"develop/windows_dev.md"};function l(n,t,p,h,d,r){return e(),s("div",null,t[0]||(t[0]=[a(`<h1 id="lingchat-开发版-windows-环境配置与使用指南" tabindex="-1">LingChat 开发版 Windows 环境配置与使用指南 <a class="header-anchor" href="#lingchat-开发版-windows-环境配置与使用指南" aria-label="Permalink to &quot;LingChat 开发版 Windows 环境配置与使用指南&quot;">​</a></h1><p>LingChat 几乎每天都在更新，但是很长时间才会发布一个 release 版本。如果你想抢先使用新功能，或者想为 LingChat 项目做贡献，但是自己不会写代码，我们也欢迎你体验最新的开发版并及时向我们汇报 Bug。</p><p>本篇文档将手把手教你如何在 Windows 电脑上，从零开始配置环境，运行 LingChat 最新的开发版代码。即使你完全不懂编程。</p><p>欢迎你，勇于探索的测试者！</p><h2 id="准备工作-安装必备工具" tabindex="-1">准备工作：安装必备工具 <a class="header-anchor" href="#准备工作-安装必备工具" aria-label="Permalink to &quot;准备工作：安装必备工具&quot;">​</a></h2><p>在开始之前，我们需要在你的电脑上安装三个免费的代码开发工具。</p><h3 id="_1-安装-git" tabindex="-1">1. 安装 Git <a class="header-anchor" href="#_1-安装-git" aria-label="Permalink to &quot;1. 安装 Git&quot;">​</a></h3><p>Git 是一个代码版本管理工具，我们可以用它轻松地从 GitHub 上下载和更新 LingChat 的源代码。</p><ul><li><strong>下载地址</strong>：<a href="https://git-scm.com/download/win" target="_blank" rel="noreferrer">https://git-scm.com/download/win</a></li><li><strong>安装方法</strong>：下载后，双击打开安装包。你不需要理解每个选项的含义，<strong>一路点击 &quot;Next&quot;</strong> 使用默认设置完成安装即可。</li></ul><h3 id="_2-安装-python" tabindex="-1">2. 安装 Python <a class="header-anchor" href="#_2-安装-python" aria-label="Permalink to &quot;2. 安装 Python&quot;">​</a></h3><p>Python 是 LingChat 使用的编程语言。</p><ul><li><strong>下载地址</strong>：<a href="https://www.python.org/downloads/" target="_blank" rel="noreferrer">https://www.python.org/downloads/</a></li><li><strong>推荐版本</strong>：建议下载 3.12.10 版本，LingChat是基于python 3.12.10 开发的</li><li><strong>安装方法</strong>： <ol><li>下载后，双击打开安装包。</li><li><strong>【非常重要！】</strong> 在安装界面的最下方，<strong>务必勾选 &quot;Add Python to PATH&quot;</strong> 选项，然后再点击 &quot;Install Now&quot;。</li><li>等待安装完成即可。</li></ol></li></ul><h3 id="_3-安装-vs-code-可选" tabindex="-1">3. 安装 VS Code（可选） <a class="header-anchor" href="#_3-安装-vs-code-可选" aria-label="Permalink to &quot;3. 安装 VS Code（可选）&quot;">​</a></h3><div class="note custom-block github-alert"><p class="custom-block-title">NOTE</p><p>如果只是单纯使用，你可以不安装它。</p></div><p>VS Code (Visual Studio Code) 是一个强大的代码编辑器，我们将用它来管理和运行 LingChat。</p><ul><li><strong>下载地址</strong>：<a href="https://code.visualstudio.com/" target="_blank" rel="noreferrer">https://code.visualstudio.com/</a></li><li><strong>安装方法</strong>：下载后，双击打开安装包。同样，使用默认设置，一路点击 &quot;Next&quot; 完成安装。</li></ul><h2 id="一-获取最新的源代码" tabindex="-1">一：获取最新的源代码 <a class="header-anchor" href="#一-获取最新的源代码" aria-label="Permalink to &quot;一：获取最新的源代码&quot;">​</a></h2><p>准备工作完成后，我们开始获取 LingChat 的源代码。</p><ol><li><p><strong>创建项目文件夹</strong>：在你的电脑上找一个合适的位置（比如 D 盘），创建一个新文件夹，专门用来存放 LingChat 的项目。例如，可以命名为 <code>MyProjects</code>。</p></li><li><p><strong>打开命令行工具</strong>：</p><ul><li>进入你刚刚创建的 <code>MyProjects</code> 文件夹。</li><li>在文件夹窗口的地址栏里，输入 <code>cmd</code> 然后按回车键。这会弹出一个黑色的命令行窗口。</li></ul></li><li><p><strong>下载代码</strong>：在弹出的黑色窗口中，复制并粘贴以下命令，然后按回车键。</p></li></ol><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> clone</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -b</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> develop</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://github.com/SlimeBoyOwO/LingChat.git</span></span></code></pre></div><ul><li><code>git clone</code> 是下载命令。</li><li><code>-b develop</code> 表示我们要下载 <code>develop</code> 分支（也就是最新的开发版）。</li></ul><div class="note custom-block github-alert"><p class="custom-block-title">NOTE</p><p>如果下载太慢，使用下面的命令：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> clone</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -b</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> develop</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://ghfast.top/github.com/SlimeBoyOwO/LingChat.git</span></span></code></pre></div></div><p>当你看到命令行提示完成，并且 <code>MyProjects</code> 文件夹下出现了一个名为 <code>LingChat</code> 的新文件夹时，就说明代码已经成功下载到你的电脑里了！</p><h2 id="二-使用-vs-code-配置和运行项目" tabindex="-1">二：使用 VS Code 配置和运行项目 <a class="header-anchor" href="#二-使用-vs-code-配置和运行项目" aria-label="Permalink to &quot;二：使用 VS Code 配置和运行项目&quot;">​</a></h2><p>现在，我们将使用 VS Code 来完成最后的配置和运行。</p><ol><li><p><strong>用 VS Code 打开项目</strong>：</p><ul><li>启动你刚刚安装的 VS Code。</li><li>点击左上角的 &quot;File&quot; -&gt; &quot;Open Folder...&quot; (或者 &quot;文件&quot; -&gt; &quot;打开文件夹...&quot;)。</li><li>在弹出的窗口中，选择我们刚刚下载的 <code>LingChat</code> 文件夹，然后点击 &quot;选择文件夹&quot;。</li></ul></li><li><p><strong>打开 VS Code 的终端</strong>：</p><ul><li>在 VS Code 的顶部菜单栏，点击 &quot;Terminal&quot; -&gt; &quot;New Terminal&quot; (或者 &quot;终端&quot; -&gt; &quot;新建终端&quot;)。</li><li>VS Code 的下方会弹出一个集成的命令行窗口，我们后续的命令都在这里输入。</li></ul></li></ol><div class="note custom-block github-alert"><p class="custom-block-title">NOTE</p><p>不使用 VS Code 的话，请打开 <code>LingChat</code> 文件夹，并仿照上面打开命令行继续下面的步骤。</p></div><h3 id="_2-1-虚拟环境的创建与维护" tabindex="-1">2.1 虚拟环境的创建与维护 <a class="header-anchor" href="#_2-1-虚拟环境的创建与维护" aria-label="Permalink to &quot;2.1 虚拟环境的创建与维护&quot;">​</a></h3><p>为了不污染你电脑本身的 Python 环境，我们将为 LingChat 创建一个独立的“虚拟环境”。这就像为这个项目准备了一个专属的、干净的工具箱。</p><ol><li><strong>创建虚拟环境</strong>：在终端里，输入以下命令并按回车。</li></ol><div class="language-powershell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">powershell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">python </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">m venv venv</span></span></code></pre></div><p>这个命令会创建一个名为 <code>venv</code> 的文件夹，里面存放着这个项目专用的 Python 环境。</p><ol start="2"><li><strong>激活虚拟环境</strong>：输入以下命令并按回车，来“进入”这个专属工具箱。</li></ol><div class="language-powershell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">powershell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.\\venv\\Scripts\\activate</span></span></code></pre></div><p>成功激活后，你会看到命令行提示符的前面出现了 <code>(venv)</code> 的字样。这表示你已经处于虚拟环境中。</p><ol start="3"><li><strong>安装项目依赖</strong>：LingChat 的运行需要很多第三方库的支持。我们用一条命令就能全部装好。</li></ol><div class="language-powershell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">powershell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">pip install </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">r requirements.txt</span></span></code></pre></div><p>这个过程可能会需要几分钟，请耐心等待它下载和安装。</p><div class="important custom-block github-alert"><p class="custom-block-title">IMPORTANT</p><p>如果出现 ERROR: Could not find a version that satisfies the requirement 等错误，可以关闭VPN重试</p></div><ol start="4"><li><strong>运行 LingChat！</strong>：万事俱备！现在双击start.windows.bat，他可以依据你刚刚创建的虚拟环境来启动程序。</li></ol><p>如果一切顺利，你应该能看到 LingChat 的程序界面弹出来了。恭喜你，成功运行了最新的开发版！</p><h3 id="_2-2-如何同步最新的更新" tabindex="-1">2.2 如何同步最新的更新？ <a class="header-anchor" href="#_2-2-如何同步最新的更新" aria-label="Permalink to &quot;2.2 如何同步最新的更新？&quot;">​</a></h3><p>LingChat 的开发版更新非常快，当你想要体验最新的功能或修复时，只需要几个简单的步骤就可以同步更新。</p><ol><li><strong>打开项目并进入虚拟环境</strong>： <ul><li>用 VS Code 打开 <code>LingChat</code> 文件夹。</li><li>打开新的终端 (<code>Terminal</code> -&gt; <code>New Terminal</code>)。</li><li>激活虚拟环境：<code>.\\venv\\Scripts\\activate</code></li></ul></li></ol><div class="tip custom-block github-alert"><p class="custom-block-title">或者重复上面打开命令行的步骤激活虚拟环境。</p><p></p></div><ol start="2"><li><p><strong>拉取最新代码</strong>：在终端中输入以下命令，从 GitHub 上拉取最新的代码。</p><div class="language-powershell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">powershell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">git pull</span></span></code></pre></div></li><li><p><strong>更新依赖库（重要）</strong>：有时候，新的代码会需要新的第三方库。所以，拉取代码后最好都执行一次更新依赖的命令。</p><div class="language-powershell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">powershell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">pip install </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">r requirements.txt</span></span></code></pre></div><p><code>pip</code> 很智能，它只会安装新增或有变动的库，不会重复安装已有的库。</p></li><li><p><strong>重新运行程序</strong>：</p><p>现在双击 start.windows.bat，你运行的就是包含所有最新改动的 LingChat 啦！</p></li></ol><h2 id="三、常见问题-faq" tabindex="-1">三、常见问题 (FAQ) <a class="header-anchor" href="#三、常见问题-faq" aria-label="Permalink to &quot;三、常见问题 (FAQ)&quot;">​</a></h2><ul><li><p><strong>Q: 输入 <code>git</code> 或 <code>python</code> 命令时，提示“不是内部或外部命令...”？</strong></p><p>A: 这说明 Git 或 Python 没有被正确安装，或者安装时忘记勾选 &quot;Add to PATH&quot;。请回到【准备工作】章节，卸载后重新安装，<strong>务必记得勾选 &quot;Add to PATH&quot; 选项</strong>。</p></li><li><p><strong>Q: 运行 <code>python main.py</code> 时报错 <code>ModuleNotFoundError: No module named &#39;xxxx&#39;</code>？</strong></p><p>A: 这个错误说明缺少某个库。通常有两个原因：</p><ol><li>你忘记激活虚拟环境了。请检查终端提示符前面是否有 <code>(venv)</code> 字样，如果没有，请执行 <code>.\\venv\\Scripts\\activate</code>。</li><li>你忘记安装依赖了，或者更新代码后没有同步更新依赖。请在激活虚拟环境后，执行 <code>pip install -r requirements.txt</code>。</li></ol></li><li><p><strong>Q: <code>git pull</code> 更新代码时提示错误或冲突 (conflict) 怎么办？</strong></p><p>A: 作为测试者，你本地的代码一般不需要修改。如果遇到冲突，最简单的办法是放弃本地的所有改动，强制和服务器保持一致。在终端执行以下命令：</p><div class="language-powershell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">powershell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">git reset </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">--</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">hard origin</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">develop</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">git pull</span></span></code></pre></div><p><strong>注意：这个命令会丢弃你可能在本地做的任何修改。</strong> 对于只想体验最新版的用户来说，这是最直接有效的方法。</p></li></ul><div class="tip custom-block github-alert"><p class="custom-block-title">你的聊天记录，设置等不会丢失，请放心。</p><p></p></div><hr><p>感谢你为 LingChat 社区做出的贡献！如果你在使用过程中发现了任何 Bug 或者有好的建议，欢迎随时向我们提 <a href="https://github.com/SlimeBoyOwO/LingChat/issues" target="_blank" rel="noreferrer">Issue</a>！</p>`,51)]))}const u=i(o,[["render",l]]);export{g as __pageData,u as default};
