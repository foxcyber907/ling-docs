import{_ as l,C as i,c as n,o,a2 as p,G as a}from"./chunks/framework.CPU0zDjs.js";const v=JSON.parse('{"title":"开发版 Windows 环境配置与使用指南","description":"详细指导如何在Windows环境下配置LingChat开发环境，包括Git、Python安装和源代码获取步骤。","frontmatter":{"title":"开发版 Windows 环境配置与使用指南","description":"详细指导如何在Windows环境下配置LingChat开发环境，包括Git、Python安装和源代码获取步骤。","outline":{"level":[2,3]}},"headers":[],"relativePath":"develop/windows_dev.md","filePath":"develop/windows_dev.md","lastUpdated":1754933564000}'),h={name:"develop/windows_dev.md"};function d(r,s,c,g,k,u){const t=i("NolebaseGitContributors"),e=i("NolebaseGitChangelog");return o(),n("div",null,[s[0]||(s[0]=p(`<h1 id="lingchat-开发版-windows-环境配置与使用指南" tabindex="-1">LingChat 开发版 Windows 环境配置与使用指南 <a class="header-anchor" href="#lingchat-开发版-windows-环境配置与使用指南" aria-label="Permalink to &quot;LingChat 开发版 Windows 环境配置与使用指南&quot;">​</a></h1><p>LingChat 几乎每天都在更新，但是很长时间才会发布一个 release 版本。如果你想抢先使用新功能，或者想为 LingChat 项目做贡献，但是自己不会写代码，我们也欢迎你体验最新的开发版并及时向我们汇报 Bug。</p><p>本篇文档将手把手教你如何在 Windows 电脑上，从零开始配置环境，运行 LingChat 最新的开发版代码。即使你完全不懂编程。</p><p>欢迎你，勇于探索的测试者！</p><h2 id="准备工作-安装必备工具" tabindex="-1">准备工作：安装必备工具 <a class="header-anchor" href="#准备工作-安装必备工具" aria-label="Permalink to &quot;准备工作：安装必备工具&quot;">​</a></h2><p>在开始之前，我们需要在你的电脑上安装五个免费的代码开发工具。</p><h3 id="_1-安装-git" tabindex="-1">1. 安装 Git <a class="header-anchor" href="#_1-安装-git" aria-label="Permalink to &quot;1. 安装 Git&quot;">​</a></h3><p>Git 是一个代码版本管理工具，我们可以用它轻松地从 GitHub 上下载和更新 LingChat 的源代码。</p><ul><li><strong>下载地址</strong>：<a href="https://git-scm.com/download/win" target="_blank" rel="noreferrer">https://git-scm.com/download/win</a></li><li><strong>安装方法</strong>：下载后，双击打开安装包。你不需要理解每个选项的含义，<strong>一路点击 &quot;Next&quot;</strong> 使用默认设置完成安装即可。</li></ul><h3 id="_2-安装-git-lfs" tabindex="-1">2. 安装 Git lfs <a class="header-anchor" href="#_2-安装-git-lfs" aria-label="Permalink to &quot;2. 安装 Git lfs&quot;">​</a></h3><p>Git LFS 是 Git 的一个扩展，用于管理大型文件，比如图片、视频、音频、源代码等等。</p><ul><li><strong>下载地址</strong>：<a href="https://git-lfs.com/" target="_blank" rel="noreferrer">https://git-lfs.com/</a></li><li><strong>安装方法</strong>：下载后，双击打开安装包，一直下一步直到安装结束。然后打开一个命令行，输入 <code>git lfs install</code> 。</li></ul><h3 id="_3-安装-python" tabindex="-1">3. 安装 Python <a class="header-anchor" href="#_3-安装-python" aria-label="Permalink to &quot;3. 安装 Python&quot;">​</a></h3><p>Python 是 LingChat 使用的编程语言。</p><ul><li><strong>下载地址</strong>：<a href="https://www.python.org/downloads/" target="_blank" rel="noreferrer">https://www.python.org/downloads/</a></li><li><strong>推荐版本</strong>：建议下载 3.12.10 版本，LingChat是基于python 3.12.10 开发的</li><li><strong>安装方法</strong>： <ol><li>下载后，双击打开安装包。</li><li><strong>【非常重要！】</strong> 在安装界面的最下方，<strong>务必勾选 &quot;Add Python to PATH&quot;</strong> 选项，然后再点击 &quot;Install Now&quot;。</li><li>等待安装完成即可。</li></ol></li></ul><h3 id="_4-安装-uv" tabindex="-1">4. 安装 uv <a class="header-anchor" href="#_4-安装-uv" aria-label="Permalink to &quot;4. 安装 uv&quot;">​</a></h3><p>uv 是一个由 Ruff 团队开发的、非常快的 Python 包管理器，我们将用它来安装 LingChat 的运行依赖。</p><ul><li><strong>安装方法</strong>： <ol><li><p>在 Windows 的开始菜单中，找到并打开 &quot;PowerShell&quot;（一个蓝色背景的窗口）。</p></li><li><p>在 PowerShell 窗口中，复制并粘贴以下命令，然后按回车键执行。</p><div class="language-powershell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">powershell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">powershell </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ExecutionPolicy ByPass </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">c </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;irm https://astral.sh/uv/install.ps1 | iex&quot;</span></span></code></pre></div></li><li><p>安装完成后，关闭 PowerShell 窗口即可。</p></li></ol></li></ul><h3 id="_5-安装-vs-code-可选" tabindex="-1">5. 安装 VS Code（可选） <a class="header-anchor" href="#_5-安装-vs-code-可选" aria-label="Permalink to &quot;5. 安装 VS Code（可选）&quot;">​</a></h3><div class="note custom-block github-alert"><p class="custom-block-title">NOTE</p><p>如果只是单纯使用，你可以不安装它，并跳过所有相关步骤。</p></div><p>VS Code (Visual Studio Code) 是最主流的代码编辑器，界面现代，运行速度快，我们将用它来管理和运行 LingChat。</p><ul><li><strong>下载地址</strong>：<a href="https://code.visualstudio.com/" target="_blank" rel="noreferrer">https://code.visualstudio.com/</a></li><li><strong>安装方法</strong>：下载后，双击打开安装包。同样，使用默认设置，一路点击 &quot;Next&quot; 完成安装。</li></ul><h2 id="一-获取最新的源代码" tabindex="-1">一：获取最新的源代码 <a class="header-anchor" href="#一-获取最新的源代码" aria-label="Permalink to &quot;一：获取最新的源代码&quot;">​</a></h2><p>准备工作完成后，我们开始获取 LingChat 的源代码。</p><ol><li><p><strong>创建项目文件夹</strong>：在你的电脑上找一个合适的位置（比如 D 盘），创建一个新文件夹，专门用来存放 LingChat 的项目。例如，可以命名为 <code>MyProjects</code>。</p></li><li><p><strong>打开命令行工具</strong>：</p><ul><li>进入你刚刚创建的 <code>MyProjects</code> 文件夹。</li><li>在文件夹窗口的地址栏里，输入 <code>cmd</code> 然后按回车键。这会弹出一个黑色的命令行窗口。</li></ul></li><li><p><strong>下载代码</strong>：在弹出的黑色窗口中，复制并粘贴以下命令，然后按回车键。</p></li></ol><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> clone</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -b</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> develop</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://github.com/SlimeBoyOwO/LingChat.git</span></span></code></pre></div><ul><li><code>git clone</code> 是下载命令。</li><li><code>-b develop</code> 表示我们要下载 <code>develop</code> 分支（也就是最新的开发版）。</li></ul><div class="note custom-block github-alert"><p class="custom-block-title">NOTE</p><p>如果下载太慢，使用下面的命令：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> clone</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -b</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> develop</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://ghfast.top/github.com/SlimeBoyOwO/LingChat.git</span></span></code></pre></div></div><p>当你看到命令行提示完成，并且 <code>MyProjects</code> 文件夹下出现了一个名为 <code>LingChat</code> 的新文件夹时，就说明代码已经成功下载到你的电脑里了！</p><h2 id="二、使用-vs-code-配置和运行项目" tabindex="-1">二、使用 VS Code 配置和运行项目 <a class="header-anchor" href="#二、使用-vs-code-配置和运行项目" aria-label="Permalink to &quot;二、使用 VS Code 配置和运行项目&quot;">​</a></h2><h3 id="_2-1-初始化vscode设置" tabindex="-1">2.1 初始化VSCode设置 <a class="header-anchor" href="#_2-1-初始化vscode设置" aria-label="Permalink to &quot;2.1 初始化VSCode设置&quot;">​</a></h3><p>现在，我们将使用 VS Code 来完成最后的配置和运行。</p><p>打开你安装好的vs code，如果不习惯英文界面，可以百度：“vscode如何设置中文”，将界面设置为中文。下面我们基于中文界面讲解。</p><p>LingChat是一个python项目，所以我们要给VS code安装Python插件。在左侧打开插件栏并搜索python，安装Python和Pylance，然后把软件重启即可。</p><h3 id="_2-2-使用vs-code-打开lingchat" tabindex="-1">2.2 使用VS Code 打开LingChat <a class="header-anchor" href="#_2-2-使用vs-code-打开lingchat" aria-label="Permalink to &quot;2.2 使用VS Code 打开LingChat&quot;">​</a></h3><p>在VS Code的左上角，找到&quot;文件&quot;选项，然后点击&quot;打开文件夹...&quot;(如果你使用的是英文界面，则是点击&quot;File&quot; -&gt; &quot;Open Folder...&quot;)，导航到刚刚下载的 <code>LingChat</code> 文件夹，然后点击 &quot;选择文件夹&quot;。现在你就成功的用VS Code打开了LingChat，在这之后，你可以在&quot;文件&quot;选项的“打开最近的文件”来快速找到LingChat。</p><h3 id="_2-3-创建并配置python运行环境" tabindex="-1">2.3 创建并配置Python运行环境 <a class="header-anchor" href="#_2-3-创建并配置python运行环境" aria-label="Permalink to &quot;2.3 创建并配置Python运行环境&quot;">​</a></h3><p>现在，我们需要为 LingChat 创建一个隔离的、独立的 Python 运行环境并安装其所需的各种库。</p><ol><li><p><strong>打开终端</strong>: 在 VS Code 的顶部菜单栏中，选择 &quot;终端&quot; -&gt; &quot;新建终端&quot;。这会在 VS Code 的下方打开一个命令行面板。</p></li><li><p><strong>创建虚拟环境</strong>: 在打开的终端中，输入并执行以下命令，来创建一个名为 <code>venv</code> 的虚拟环境。</p><div class="language-powershell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">powershell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">uv venv venv</span></span></code></pre></div></li><li><p><strong>激活虚拟环境</strong>: 继续在终端中执行以下命令来激活刚刚创建的环境。</p><div class="language-powershell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">powershell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.\\venv\\Scripts\\activate</span></span></code></pre></div><p>激活成功后，你会看到终端的提示符前面出现了 <code>(.venv)</code> 的字样。</p></li><li><p><strong>安装项目依赖</strong>: 项目的依赖项现在记录在 <code>pyproject.toml</code> 文件中。使用我们之前安装的 <code>uv</code> 工具，执行以下命令来安装所有依赖。</p><div class="language-powershell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">powershell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">uv pip install </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">r pyproject.toml</span></span></code></pre></div><p>这个过程会根据你的网络情况花费几分钟到十几分钟不等，<code>uv</code> 的安装速度很快，请耐心等待。</p></li><li><p><strong>选择解释器</strong>: 按下 <code>Ctrl+Shift+P</code> 打开命令面板，输入 <code>Python: Select Interpreter</code>，然后选择带有 <code>(&#39;.venv&#39;: venv)</code> 标识的那个 Python 解释器。这会告诉 VS Code 使用我们创建的虚拟环境来运行代码。</p></li><li><p><strong>运行 LingChat！</strong>：万事俱备！</p></li></ol><p>现在请在根目录新建一个文件，把他命名为.env，把.env.example，复制到.env中并保存。然后点击 VS Code 右上角的 &quot;▶&quot; (运行) 按钮来方便地启动 LingChat。</p><p>当然，如果不使用vscode，你也可以双击start.bat，它可以依据你刚刚创建的虚拟环境来启动程序。</p><p>如果一切顺利，你应该能看到 LingChat 启动成功。恭喜你，成功运行了最新的开发版！</p><h2 id="三、获取最新的更新" tabindex="-1">三、获取最新的更新 <a class="header-anchor" href="#三、获取最新的更新" aria-label="Permalink to &quot;三、获取最新的更新&quot;">​</a></h2><p>LingChat 几乎每天都在更新，你可以随时查看并使用最新的更新。</p><p>点击左侧的源代码管理按钮进入查看更新界面。点击虚线箭头（同步更改）刷新并拉取近期的更新。</p><div class="important custom-block github-alert"><p class="custom-block-title">IMPORTANT</p><p><strong>重要提示</strong>：作为测试者，我们一般不修改本地代码。如果拉取更新时提示“冲突 (Conflict)”，最简单的解决方法是放弃所有本地修改。可以点击上图中的撤销箭头（放弃所有更改），将所有文件恢复到更新前的状态，然后再点击同步更改按钮拉取最新代码。如果你对某些文件（如人物设定）有自己的修改，这大概率不要紧，不过还是建议备份。</p></div><h2 id="四、纯命令行方式配置与使用-windows-linux" tabindex="-1">四、纯命令行方式配置与使用 (Windows / Linux) <a class="header-anchor" href="#四、纯命令行方式配置与使用-windows-linux" aria-label="Permalink to &quot;四、纯命令行方式配置与使用 (Windows / Linux)&quot;">​</a></h2><p>如果你习惯使用命令行，本章节将指导你如何完全通过命令行来完成所有配置和更新操作。</p><h3 id="_1-安装核心工具" tabindex="-1">1. 安装核心工具 <a class="header-anchor" href="#_1-安装核心工具" aria-label="Permalink to &quot;1. 安装核心工具&quot;">​</a></h3><p>请确保你已根据【准备工作】章节安装了 <code>Git</code>, <code>Python</code> 和 <code>uv</code>。</p><h3 id="_2-克隆与进入项目" tabindex="-1">2. 克隆与进入项目 <a class="header-anchor" href="#_2-克隆与进入项目" aria-label="Permalink to &quot;2. 克隆与进入项目&quot;">​</a></h3><p>首先，打开你的命令行终端（Windows上是<code>CMD</code>或<code>PowerShell</code>，Linux上是<code>Terminal</code>），然后执行以下命令。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 克隆 develop 分支的源代码</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> clone</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -b</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> develop</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://github.com/SlimeBoyOwO/LingChat.git</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 进入项目目录</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> LingChat</span></span></code></pre></div><div class="note custom-block github-alert"><p class="custom-block-title">NOTE</p><p></p><p>如果下载太慢，使用下面的命令：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> clone</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -b</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> develop</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://ghfast.top/github.com/SlimeBoyOwO/LingChat.git</span></span></code></pre></div></div><h3 id="_3-创建与激活虚拟环境" tabindex="-1">3. 创建与激活虚拟环境 <a class="header-anchor" href="#_3-创建与激活虚拟环境" aria-label="Permalink to &quot;3. 创建与激活虚拟环境&quot;">​</a></h3><p>为了不污染你系统的全局 Python 环境，我们强烈建议为 LingChat 创建一个独立的虚拟环境。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 创建一个名为 venv 的虚拟环境</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">uv</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> venv</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> venv</span></span></code></pre></div><p>环境创建成功后，需要激活它。激活命令在 Windows 和 Linux 上有所不同：</p><ul><li><p><strong>在 Windows (CMD 或 PowerShell) 中激活：</strong></p><div class="language-powershell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">powershell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.\\venv\\Scripts\\activate</span></span></code></pre></div></li><li><p><strong>在 Linux 或 macOS (Bash/Zsh) 中激活：</strong></p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">source</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> venv/bin/activate</span></span></code></pre></div></li></ul><p>激活成功后，你的命令行提示符前面会出现 <code>(venv)</code> 字样。</p><h3 id="_4-安装项目依赖" tabindex="-1">4. 安装项目依赖 <a class="header-anchor" href="#_4-安装项目依赖" aria-label="Permalink to &quot;4. 安装项目依赖&quot;">​</a></h3><p>请确保你的虚拟环境已激活。然后运行以下命令来安装所有必需的 Python 库：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">uv</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pip</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -r</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pyproject.toml</span></span></code></pre></div><p>这个过程会根据你的网络情况花费几分钟到十几分钟不等，请耐心等待。</p><h3 id="_5-运行-lingchat" tabindex="-1">5. 运行 LingChat <a class="header-anchor" href="#_5-运行-lingchat" aria-label="Permalink to &quot;5. 运行 LingChat&quot;">​</a></h3><p>所有依赖安装完成后，请在根目录新建一个文件，把他命名为.env，把.env.example，复制到.env中并保存。然后执行以下命令即可启动 LingChat：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">python</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> main.py</span></span></code></pre></div><h3 id="_6-拉取最新的更新" tabindex="-1">6. 拉取最新的更新 <a class="header-anchor" href="#_6-拉取最新的更新" aria-label="Permalink to &quot;6. 拉取最新的更新&quot;">​</a></h3><p>当你想获取最新的开发版代码时，请在项目根目录（<code>LingChat</code> 文件夹内）执行以下命令。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 步骤一：放弃所有本地修改，避免冲突（注意：会丢失你的本地改动，请做好备份）</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> reset</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --hard</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> origin/develop</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 步骤二：从 GitHub 拉取最新代码</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pull</span></span></code></pre></div><p><strong>提示</strong>：如果更新后 <code>pyproject.toml</code> 文件发生了变化，你需要再次运行 <code>uv pip install -r pyproject.toml</code> 来同步最新的依赖。</p><h2 id="五、常见问题-faq" tabindex="-1">五、常见问题 (FAQ) <a class="header-anchor" href="#五、常见问题-faq" aria-label="Permalink to &quot;五、常见问题 (FAQ)&quot;">​</a></h2><ul><li><p><strong>Q: 输入 <code>git</code> 或 <code>python</code> 或 <code>uv</code> 命令时，提示“不是内部或外部命令...”？</strong></p><p>A: 这说明工具没有被正确安装，或者安装时忘记勾选 &quot;Add to PATH&quot;。请回到【准备工作】章节，卸载后重新安装，<strong>务必记得勾选 &quot;Add to PATH&quot; 选项</strong>。</p></li><li><p><strong>Q: 运行 <code>python main.py</code> 时报错 <code>ModuleNotFoundError: No module named &#39;xxxx&#39;</code>？</strong></p><p>A: 这个错误说明缺少某个库。通常有两个原因：</p><ol><li><p>你忘记激活虚拟环境了。请检查终端提示符前面是否有 <code>(venv)</code> 字样，如果没有，请执行 <code>.\\venv\\Scripts\\activate</code>。</p></li><li><p>你忘记安装依赖了，或者更新代码后没有同步更新依赖。请在激活虚拟环境后，执行 <code>uv pip install -r pyproject.toml</code>。</p></li></ol></li><li><p><strong>Q: <code>git pull</code> 更新代码时提示错误或冲突 (conflict) 怎么办？</strong></p><p>A: 作为测试者，你本地的代码一般不需要修改。如果遇到冲突，最简单的办法是放弃本地的所有改动，强制和服务器保持一致。在终端执行以下命令：</p><div class="language-powershell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">powershell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">git reset </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">--</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">hard origin</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">develop</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">git pull</span></span></code></pre></div><p><strong>注意：这个命令会丢弃你可能在本地做的任何修改。</strong> 对于只想体验最新版的用户来说，这是最直接有效的方法。</p></li></ul><div class="tip custom-block github-alert"><p class="custom-block-title">你的聊天记录，设置等应该不会丢失，不过推荐备份。</p><p></p></div><hr><p>感谢你为 LingChat 社区做出的贡献！如果你在使用过程中发现了任何 Bug 或者有好的建议，欢迎随时向我们提 <a href="https://github.com/SlimeBoyOwO/LingChat/issues" target="_blank" rel="noreferrer">Issue</a>！</p>`,76)),a(t),a(e)])}const C=l(h,[["render",d]]);export{v as __pageData,C as default};
