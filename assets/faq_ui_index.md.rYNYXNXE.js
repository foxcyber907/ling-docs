import{_ as l,C as i,c as e,o as p,a2 as k,G as a}from"./chunks/framework.CPU0zDjs.js";const r="/assets/faq-screen/463052615-ca13a991-4e8a-4c0d-b98e-67be36845a79.webp",E="/assets/faq-screen/463053323-ea51c143-12da-4c7a-9c5e-8f18bc54b673.webp",d="/assets/faq-screen/463052225-26c603e7-0ef2-4664-903a-11a366720449.webp",o="/assets/faq-screen/463052051-68e96fb7-38e1-465f-bb7e-2ab6f0c5c942.webp",g="/assets/faq-screen/463051728-7b560c32-8831-4dcc-b313-eb4be55f86c9.webp",c="/assets/faq-screen/463047579-2ab88016-4efa-4bab-90aa-d952e83f5ed8.webp",n="/assets/faq-screen/463047395-5d0d1e7c-14a4-43fb-b240-2299bcb4cf45.webp",_=JSON.parse('{"title":"界面与启动排障","description":"解决LingChat界面显示问题和启动问题，包括加载问题、端口占用问题和浏览器兼容性问题。","frontmatter":{"title":"界面与启动排障","description":"解决LingChat界面显示问题和启动问题，包括加载问题、端口占用问题和浏览器兼容性问题。"},"headers":[],"relativePath":"faq/ui/index.md","filePath":"faq/ui/index.md","lastUpdated":1754291656000}'),y={name:"faq/ui/index.md"};function F(u,s,q,f,b,A){const t=i("NolebaseGitContributors"),h=i("NolebaseGitChangelog");return p(),e("div",null,[s[0]||(s[0]=k('<h1 id="🔳界面与启动排障" tabindex="-1">🔳界面与启动排障 <a class="header-anchor" href="#🔳界面与启动排障" aria-label="Permalink to &quot;🔳界面与启动排障&quot;">​</a></h1><p>本板块收录 LingChat 启动、界面、端口等相关常见问题及解决方法。</p><h2 id="启动问题" tabindex="-1">启动问题 <a class="header-anchor" href="#启动问题" aria-label="Permalink to &quot;启动问题&quot;">​</a></h2><h3 id="lingchat-启动半天都在转圈圈" tabindex="-1">Lingchat 启动半天都在转圈圈 <a class="header-anchor" href="#lingchat-启动半天都在转圈圈" aria-label="Permalink to &quot;Lingchat 启动半天都在转圈圈&quot;">​</a></h3><p><img src="'+r+'" alt="3c06ff9da6aa261ba2855d0c512f656e"></p><ul><li>多等一会，初始化时间比较长，在此期间不要关闭，如果最后还是无法启动，那没救了（，你的电脑可能是 20 多年前的老古董</li></ul><h3 id="通常每个套接字地址-地址-网络地址-端口-只允许使用一次" tabindex="-1">通常每个套接字地址(地址/网络地址/端口)只允许使用一次 <a class="header-anchor" href="#通常每个套接字地址-地址-网络地址-端口-只允许使用一次" aria-label="Permalink to &quot;通常每个套接字地址(地址/网络地址/端口)只允许使用一次&quot;">​</a></h3><p><img src="'+E+`" alt="image"></p><ul><li>可能你的上一个 Lingchat 没有关闭，或者有其他从程序占用了 8765 这个端口，你可以检查是哪个程序占用的，把它那个程序给关了</li></ul><h3 id="极少数出现-哪个浏览器都卡死在加载页面" tabindex="-1">极少数出现：哪个浏览器都卡死在加载页面 <a class="header-anchor" href="#极少数出现-哪个浏览器都卡死在加载页面" aria-label="Permalink to &quot;极少数出现：哪个浏览器都卡死在加载页面&quot;">​</a></h3><ul><li>用记事本打开backend\\api\\frontend_router.py，把文件内容更换为以下内容，重启程序即可修复：</li></ul><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> fastapi </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> APIRouter, Request, Response  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 新增 Response</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> fastapi.responses </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> FileResponse</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> fastapi.staticfiles </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> StaticFiles</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> os</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> pathlib </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Path  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 新增 Path 用于更安全的路径操作</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">router </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> APIRouter()</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">root_dir </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> os.path.dirname(os.path.dirname(os.path.dirname(os.path.abspath(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">__file__</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))))</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">frontend_dir </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> os.path.join(root_dir, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;frontend&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;public&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># ✅ 自定义 StaticFiles（禁用缓存）</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> NoCacheStaticFiles</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">StaticFiles</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">):</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    async</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> def</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> get_response</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(self, path: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">str</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, scope):</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        response </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> await</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> super</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">().get_response(path, scope)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        response.headers[</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Cache-Control&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;no-cache, no-store, must-revalidate&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        response.headers[</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Pragma&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;no-cache&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        response.headers[</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Expires&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;0&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        # ✅ 新增：强制修正 JS 文件的 Content-Type</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> path.endswith(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;.js&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">):</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            response.headers[</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Content-Type&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;application/javascript&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> response</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># ✅ 托管所有静态资源（保持原有路径结构）</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">def</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> get_static_files</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">():</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> NoCacheStaticFiles(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">directory</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">frontend_dir)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># ✅ 保持原有HTML路由</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">def</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> get_file_response</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(file_path: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">str</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) -&gt; FileResponse:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    response </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> FileResponse(file_path)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    response.headers.update({</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        &quot;Cache-Control&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;no-cache, no-store, must-revalidate&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        &quot;Pragma&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;no-cache&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        &quot;Expires&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;0&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    })</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> response</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># ✅ 新增：方案二修复方法 - 手动处理关键JS文件</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">@router.get</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;/app.js&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 假设这是你的主JS文件</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">async</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> def</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> serve_app_js</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">():</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    js_path </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Path(frontend_dir) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;app.js&quot;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # 根据实际路径调整</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    if</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> not</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> js_path.exists():</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        raise</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> HTTPException(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">status_code</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">404</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # ✅ 强制返回正确的 Content-Type</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Response(</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">        content</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">js_path.read_bytes(),</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">        media_type</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;application/javascript&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">        headers</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">            &quot;Cache-Control&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;no-cache, no-store, must-revalidate&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">            &quot;Pragma&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;no-cache&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    )</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">@router.get</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;/&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">async</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> def</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> index</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">():</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> get_file_response(os.path.join(frontend_dir, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;pages&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;index.html&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">@router.get</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;/about&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">async</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> def</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> about</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">():</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> get_file_response(os.path.join(frontend_dir, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;pages&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;about.html&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">@router.get</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;/settings&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">async</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> def</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> settings</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">():</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> get_file_response(os.path.join(frontend_dir, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;pages&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;settings.html&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))</span></span></code></pre></div><h2 id="对话问题" tabindex="-1">对话问题 <a class="header-anchor" href="#对话问题" aria-label="Permalink to &quot;对话问题&quot;">​</a></h2><h3 id="提示-402-错误-your-api-key-is-invalid" tabindex="-1">提示 402 错误: Your api key is invalid <a class="header-anchor" href="#提示-402-错误-your-api-key-is-invalid" aria-label="Permalink to &quot;提示 402 错误: Your api key is invalid&quot;">​</a></h3><p><img src="`+d+'" alt="9049a8c0adc590f56717b4fec3f705f6"></p><ul><li>翻译：你的 API 无效，检查设置里有没有改过秘钥</li><li>检查是否 API KEY 和 URL 是对应的，硅基流动的秘钥不能给 deepseek 用之类的</li></ul><h3 id="提示-402-错误-insuffient-balance" tabindex="-1">提示 402 错误：Insuffient Balance <a class="header-anchor" href="#提示-402-错误-insuffient-balance" aria-label="Permalink to &quot;提示 402 错误：Insuffient Balance&quot;">​</a></h3><p><img src="'+o+'" alt="36424a8d6fc3b28ae50e004a1ef31356"></p><ul><li>翻译：你没有余额，假如你用 deepseek，要先充值</li></ul><h2 id="simple-vits-api-语音问题" tabindex="-1">Simple Vits API 语音问题 <a class="header-anchor" href="#simple-vits-api-语音问题" aria-label="Permalink to &quot;Simple Vits API 语音问题&quot;">​</a></h2><h3 id="启动提示-py-有问题" tabindex="-1">启动提示 py 有问题 <a class="header-anchor" href="#启动提示-py-有问题" aria-label="Permalink to &quot;启动提示 py 有问题&quot;">​</a></h3><p><img src="'+g+'" alt="2da141f2e7c7e654c979ccbbde19d5d6"></p><ul><li>如果你在解压的时候遇到了错误提示，则软件是无法打开的，推荐使用 Bandzip 解压软件，无广告而且比原版 windows 好用多了。然后使用 Bandzip 解压，无错误则成功</li></ul><h3 id="vits-卡住-提示-connection-拒绝" tabindex="-1">Vits 卡住，提示 Connection 拒绝 <a class="header-anchor" href="#vits-卡住-提示-connection-拒绝" aria-label="Permalink to &quot;Vits 卡住，提示 Connection 拒绝&quot;">​</a></h3><p><img src="'+c+'" alt="1c3045c784d4bd9c1d2ffbe9070b01ae"></p><ul><li>打开 localhost:23456，随便生成一个语音。如果有错误提示：</li><li>使用梯子，确保网络环境通畅，首次生成语音会下载国外的东西。</li><li>如果网页能正常生成语音，则 lingchat 肯定也没问题</li><li>重启 lingchat，即可修复</li></ul><h3 id="提示-speaker-id-不存在" tabindex="-1">提示 speaker_id 不存在 <a class="header-anchor" href="#提示-speaker-id-不存在" aria-label="Permalink to &quot;提示 speaker_id 不存在&quot;">​</a></h3><p><img src="'+n+'" alt="375cec5632c886575ef240d06897302e"></p><ul><li>没有安装语言模型，把语音模型下载到 data/models/文件夹</li><li>如果使用的是其他 vits 模型，请人工设置 game_data/characters/人物名/settings.txt 里面的 speaker_id 的值，可以用 0 测试</li></ul><h3 id="mecab初始化失败" tabindex="-1">MeCab初始化失败 <a class="header-anchor" href="#mecab初始化失败" aria-label="Permalink to &quot;MeCab初始化失败&quot;">​</a></h3><p><img src="'+n+'" alt="2525ef209761d9662ef70c047feab802"></p><ul><li>Vits有中文路径导致的，不要包含任何中文路径</li></ul><h3 id="生成之后卡死-无报错提示" tabindex="-1">生成之后卡死，无报错提示 <a class="header-anchor" href="#生成之后卡死-无报错提示" aria-label="Permalink to &quot;生成之后卡死，无报错提示&quot;">​</a></h3><ul><li>经过测试，部分50系显卡会有这个问题，simple-vits-api似乎暂时不支持部分50系显卡，请使用BERT模型</li></ul><h2 id="style-bert-vits2-语音问题" tabindex="-1">Style Bert Vits2 语音问题 <a class="header-anchor" href="#style-bert-vits2-语音问题" aria-label="Permalink to &quot;Style Bert Vits2 语音问题&quot;">​</a></h2><blockquote><p>这个问题太多了，他们写的代码有很大的安装问题。请等待我们日后打包个简单版本</p></blockquote>',36)),a(t),a(h)])}const m=l(y,[["render",F]]);export{_ as __pageData,m as default};
