import{_ as l,C as e,c as r,o as n,a2 as o,G as t}from"./chunks/framework.CPU0zDjs.js";const m=JSON.parse('{"title":"LingPet 灵宠","description":"LingPet 是LingChat项目的附属作品，一款开源的桌宠。","frontmatter":{"title":"LingPet 灵宠","description":"LingPet 是LingChat项目的附属作品，一款开源的桌宠。"},"headers":[],"relativePath":"manual/expand/ling_pet.md","filePath":"manual/expand/ling_pet.md","lastUpdated":1759767388000}'),h={name:"manual/expand/ling_pet.md"};function p(d,a,g,c,u,k){const i=e("NolebaseGitContributors"),s=e("NolebaseGitChangelog");return n(),r("div",null,[a[0]||(a[0]=o(`<h1 id="lingpet-灵宠" tabindex="-1">LingPet 灵宠 <a class="header-anchor" href="#lingpet-灵宠" aria-label="Permalink to &quot;LingPet 灵宠&quot;">​</a></h1><p>LingPet 是一款开源的桌宠。</p><p>美术资源来自<a href="https://github.com/SlimeBoyOwO/LingChat/blob/develop/ling_chat/core/ai_service/rag_manager.py" target="_blank" rel="noreferrer">LingChat</a>，特此感谢。</p><h2 id="✨-核心功能" tabindex="-1">✨ 核心功能 <a class="header-anchor" href="#✨-核心功能" aria-label="Permalink to &quot;✨ 核心功能&quot;">​</a></h2><ul><li><strong>智能对话</strong>: 与桌宠进行流畅、自然的实时对话。</li><li><strong>情感化身</strong>: 桌宠拥有多种可变头像，能根据对话内容展现出高兴、悲伤、好奇等多种情绪。</li><li><strong>语音合成 (TTS)</strong>: 集成 Style-Bert-Vits2 语音合成技术，让您能听到桌宠的声音。</li><li><strong>屏幕分析</strong>: 独特的功能，允许桌宠“看到”您的屏幕内容，并据此提供相关的评论或帮助。</li><li><strong>跨平台</strong>: 基于 Tauri 构建，可运行在 Windows、macOS 和 Linux 系统上。</li></ul><h2 id="使用" tabindex="-1">使用 <a class="header-anchor" href="#使用" aria-label="Permalink to &quot;使用&quot;">​</a></h2><h3 id="_1-将鼠标悬停在桌宠-点击右上角浮现的设置图标" tabindex="-1">1. 将鼠标悬停在桌宠，点击右上角浮现的设置图标 <a class="header-anchor" href="#_1-将鼠标悬停在桌宠-点击右上角浮现的设置图标" aria-label="Permalink to &quot;1. 将鼠标悬停在桌宠，点击右上角浮现的设置图标&quot;">​</a></h3><p><img src="https://lingchat.wiki/assets/ling_pet/image.png" alt="主界面"></p><h3 id="_2-按照openai格式配置好大语言模型的api设置" tabindex="-1">2. 按照OpenAI格式配置好大语言模型的api设置 <a class="header-anchor" href="#_2-按照openai格式配置好大语言模型的api设置" aria-label="Permalink to &quot;2. 按照OpenAI格式配置好大语言模型的api设置&quot;">​</a></h3><p>如：</p><ul><li>sk-**********</li><li><a href="https://api.deepseek.com/v1" target="_blank" rel="noreferrer">https://api.deepseek.com/v1</a> (记得加https)</li><li>deepseek-chat</li></ul><p>配置好后可以点击测试连接测试是否成功。</p><p><img src="https://lingchat.wiki/assets/ling_pet/aiSettings.png" alt="AI设置"></p><h3 id="可选-3-安装style-bert-vits2语音系统" tabindex="-1">（可选）3. 安装Style-bert-vits2语音系统 <a class="header-anchor" href="#可选-3-安装style-bert-vits2语音系统" aria-label="Permalink to &quot;（可选）3. 安装Style-bert-vits2语音系统&quot;">​</a></h3><ol><li>切换到Vits设置，打开总开关</li><li>选择一个合适的文件</li><li>点击安装（下载完成前不要关闭窗口）</li><li>下载完成后，回到页面上方点击绿色按钮“启动本地语音服务”</li><li>等待10秒，点击测试连接看看是否成功</li><li>（可选）如果希望每次启动桌宠就自动启动语音服务，可以打开对应的开关</li></ol><p><img src="https://lingchat.wiki/assets/ling_pet/vitsSettings.png" alt="语音设置"></p><h2 id="🛠️-技术栈" tabindex="-1">🛠️ 技术栈 <a class="header-anchor" href="#🛠️-技术栈" aria-label="Permalink to &quot;🛠️ 技术栈&quot;">​</a></h2><ul><li><strong>前端</strong>: Vue 3, Vite, TypeScript, Vuetify</li><li><strong>后端</strong>: Rust, Tauri</li><li><strong>AI</strong>: 大语言模型集成</li><li><strong>TTS</strong>: <a href="https://github.com/neodyland/sbv2-api" target="_blank" rel="noreferrer">sbv2-api</a></li></ul><h2 id="🚀-快速开始-开发" tabindex="-1">🚀 快速开始 （开发） <a class="header-anchor" href="#🚀-快速开始-开发" aria-label="Permalink to &quot;🚀 快速开始 （开发）&quot;">​</a></h2><h3 id="_1-环境准备" tabindex="-1">1. 环境准备 <a class="header-anchor" href="#_1-环境准备" aria-label="Permalink to &quot;1. 环境准备&quot;">​</a></h3><p>请确保您已安装 <a href="https://nodejs.org/" target="_blank" rel="noreferrer">Node.js</a>、<a href="https://pnpm.io/" target="_blank" rel="noreferrer">pnpm</a> 以及 <a href="https://tauri.app/v1/guides/getting-started/prerequisites" target="_blank" rel="noreferrer">Rust 环境和 Tauri 依赖</a>。</p><h3 id="_2-克隆项目" tabindex="-1">2. 克隆项目 <a class="header-anchor" href="#_2-克隆项目" aria-label="Permalink to &quot;2. 克隆项目&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> clone</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://github.com/kono-dada/Ling-Pet.git</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Ling-Pet</span></span></code></pre></div><h3 id="_3-安装依赖" tabindex="-1">3. 安装依赖 <a class="header-anchor" href="#_3-安装依赖" aria-label="Permalink to &quot;3. 安装依赖&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pnpm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span></span></code></pre></div><h3 id="_4-运行开发环境" tabindex="-1">4. 运行开发环境 <a class="header-anchor" href="#_4-运行开发环境" aria-label="Permalink to &quot;4. 运行开发环境&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pnpm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> tauri</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> dev</span></span></code></pre></div><h3 id="_5-构建应用" tabindex="-1">5. 构建应用 <a class="header-anchor" href="#_5-构建应用" aria-label="Permalink to &quot;5. 构建应用&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pnpm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> tauri</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> build</span></span></code></pre></div><h2 id="💡-ide-配置推荐" tabindex="-1">💡 IDE 配置推荐 <a class="header-anchor" href="#💡-ide-配置推荐" aria-label="Permalink to &quot;💡 IDE 配置推荐&quot;">​</a></h2><ul><li><a href="https://code.visualstudio.com/" target="_blank" rel="noreferrer">VS Code</a></li><li><a href="https://marketplace.visualstudio.com/items?itemName=Vue.volar" target="_blank" rel="noreferrer">Volar (Vue 官方插件)</a></li><li><a href="https://marketplace.visualstudio.com/items?itemName=tauri-apps.tauri-vscode" target="_blank" rel="noreferrer">Tauri</a></li><li><a href="https://marketplace.visualstudio.com/items?itemName=rust-lang.rust-analyzer" target="_blank" rel="noreferrer">rust-analyzer</a></li></ul>`,31)),t(i),t(s)])}const _=l(h,[["render",p]]);export{m as __pageData,_ as default};
